# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags:        
      - 'v*'           
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo $(echo "${GITHUB_REF#refs/tags/}" )
          echo "patch = $(echo ${GITHUB_REF#refs/tags/} | cut -d '.' -f1 )" >> $GITHUB_ENV
          echo "major = $(echo ${GITHUB_REF#refs/tags/} | cut -d '.' -f2 )" >> $GITHUB_ENV
          echo "minor = $(echo ${GITHUB_REF#refs/tags/} | cut -d '.' -f2 )" >> $GITHUB_ENV
          echo I tried to fetch value of ${{env.patch}}
          echo End of pipeline
     
      - name: Publish test coverage report
        uses: GuillaumeFalourd/copy-push-files@v1
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          name: adarshadash
          email: adi.dash880@gmail.com
          source_files: templates
          remote_repository: https://github.com/adarshadash/sharedlibrary
          target_branch: main
          target_dir: vars//${{GITHUB_ENV.patch}}//${{GITHUB_ENV.major}}//${{GITHUB_ENV.minor}}
          commit_message: 'Publishing test coverage report' 
          access_token: ${{ secrets.token }}  
